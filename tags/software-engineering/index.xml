<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software engineering on void?</title>
    <link>https://netotz.github.io/tags/software-engineering/</link>
    <description>Recent content in software engineering on void?</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://netotz.github.io/tags/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The SOLID Principles</title>
      <link>https://netotz.github.io/posts/solid/</link>
      <pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://netotz.github.io/posts/solid/</guid>
      <description>Awesome articles about the topic:
 SOLID Principles Around You    In software engineering, SOLID is a mnemonic acronym for five design principles intended to make software designs more understandable, flexible, and maintainable.
 But when to apply SOLID? Ardalis recommends following the Pain Driven Development or PDD:
 Write code using the simplest techniques you know to get the problem solved. Trying to always apply all SOLID principles would result in a premature optimization of the application&amp;rsquo;s design.</description>
    </item>
    
    <item>
      <title>The Four Pillars of Object Oriented Programming</title>
      <link>https://netotz.github.io/posts/four-pillars-oop/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://netotz.github.io/posts/four-pillars-oop/</guid>
      <description>The four pillars of OOP are:
 Abstraction Encapsulation Inheritance Polymorphism  But before describing each, basic concepts of OOP are needed to understand.
Basic OOP Object Oriented Programming (OOP) is a programming paradigm that structures a software program into reusable pieces of code blueprints, which are called classes.
Class A class is a code template or blueprint that describes what an object is and what it does, by defining attributes to store data and implementing methods or behaviors to use that data.</description>
    </item>
    
  </channel>
</rss>
